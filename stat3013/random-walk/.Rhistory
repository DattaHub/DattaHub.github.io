install.packages("ROCR")
library(ROCR)
data(ROCR.simple)
df <- data.frame(ROCR.simple)
View(df)
?ROCR.simple
library(plotROC)
install.packages("plotROC")
library(plotROC)
rocplot <- ggplot(df, aes(m = predictions, d = labels))+ geom_roc(n.cuts=20,labels=FALSE)
rocplot + style_roc(theme = theme_grey) #+ geom_rocci(fill="pink")
rocplot +
style_roc(theme = theme_grey) +
theme(axis.text = element_text(colour = "blue")) +
# ggtitle("Themes and annotations") +
annotate("text", x = .75, y = .25,
label = paste("AUC =", round(calc_auc(basicplot)$AUC, 2))) +
scale_x_continuous("1 - Specificity", breaks = seq(0, 1, by = .1))
rocplot +
style_roc(theme = theme_grey) +
theme(axis.text = element_text(colour = "blue")) +
# ggtitle("Themes and annotations") +
annotate("text", x = .75, y = .25,
label = paste("AUC =", round(calc_auc(rocplot)$AUC, 2))) +
scale_x_continuous("1 - Specificity", breaks = seq(0, 1, by = .1))
shiny::runApp('C:/Users/jd033/Box/COVID/app')
runApp('C:/Users/jd033/Box/COVID/NWA/app')
runApp('C:/Users/jd033/Box/COVID/NWA/app')
install.packages("sde")
library(shiny)
ui <- fluidPage(
tags$style("* { font-family: Arial; }"),
titlePanel("Random Walk"),
sidebarLayout(
sidebarPanel(
p("This plot shows a simulated random walk."),
p("Contact for source code for this app: ", a("Jyotishka Datta", target="_blank", href="mailto:jd033@uark.edu")),
numericInput("seed","Random Seed",123),
sliderInput("paths",
"Paths",
min = 1,
max = 100,
value = 1),
sliderInput("start",
"Starting Value",
1,10,1,1),
sliderInput("r",
"Expected Return",-0.1, 0.1, 0, 0.001
sliderInput("sigma",
"Sigma",0.001, 1, 0.01, 0.001),
sliderInput("periods",
"Periods",10, 1000, 200, 10),
),
mainPanel(plotOutput("plot"))
)
)
server <- function(input, output) {
plot_input <- reactive({
set.seed(input$seed)
mat <- sapply(seq_len(input$paths), function(i){
sde::GBM(input$start, input$r, input$sigma, 1, input$periods)
})
matplot(mat, type = "l", lty = 1, main = "Random Walks")
})
output$plot <- renderPlot({ plot_input() })
}
app <- shinyApp(ui,server())
app <- shinyApp(ui,server)
source('C:/Users/jd033/OneDrive/Documents/R/STAT 3013 (Intro Prob)/app.R')
source('C:/Users/jd033/OneDrive/Documents/R/STAT 3013 (Intro Prob)/app.R')
app <- shinyApp(ui,server)
runApp(app)
runApp('C:/Users/jd033/OneDrive/Documents/R/STAT 3013 (Intro Prob)')
runApp('C:/Users/jd033/OneDrive/Documents/R/STAT 3013 (Intro Prob)')
source('C:/Users/jd033/OneDrive/Documents/R/STAT 3013 (Intro Prob)/app.R')
runApp(app)
runApp(app)
setwd("~/GitHub/DattaHub.github.io/stat3013/random-walk")
source('~/GitHub/DattaHub.github.io/stat3013/random-walk/app.R')
runApp(app)
runApp(app)
runApp(app)
runApp(app)
ui <- fluidPage(
tags$style("* { font-family: Arial; }"),
titlePanel("Random Walk"),
sidebarLayout(
sidebarPanel(
p("This plot shows a simulated random walk."),
numericInput("seed","Random Seed",123),
sliderInput("paths",
"Paths",
min = 1,
max = 100,
value = 1),
sliderInput("start",
"Starting Value",
0,10,1,1),
sliderInput("r",
"Expected Return",-0.1, 0.1, 0, 0.001),
sliderInput("sigma",
"Sigma",0.001, 1, 0.01, 0.001),
sliderInput("periods",
"Periods",10, 1000, 200, 10),
p("Contact for source code for this app: ", a("Jyotishka Datta", target="_blank", href="mailto:jd033@uark.edu"))
),
mainPanel(plotOutput("plot"))
)
)
source('~/GitHub/DattaHub.github.io/stat3013/random-walk/app.R')
runApp(app)
setwd("~/GitHub/DattaHub.github.io/stat3013/random-walk")
server <- function(input, output) {
output$plot <- renderPlot({
set.seed(input$seed)
mat <- sapply(seq_len(input$paths), function(i){
sde::GBM(input$start, input$r, input$sigma, 1, input$periods)
})
matplot(mat, type = "l", lty = 1, main = "Random Walks") })
}
source('~/GitHub/DattaHub.github.io/stat3013/random-walk/app.R')
runApp(app)
runApp('random_walk')
runApp()
runApp()
runApp()
runApp()
runApp()
?GBM
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
